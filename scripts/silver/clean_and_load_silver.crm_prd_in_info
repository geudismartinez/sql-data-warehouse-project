-- 1. Eliminamos la tabla si ya existe
IF OBJECT_ID('silver.crm_prd_info', 'U') IS NOT NULL
    DROP TABLE silver.crm_prd_info;

-- 2. Creamos la tabla destino con estructura limpia
CREATE TABLE silver.crm_prd_info (
    prd_id           INT,
    cat_id           NVARCHAR(50),
    prd_key          NVARCHAR(50),
    prd_nm           NVARCHAR(50),
    prd_cost         INT,
    prd_line         NVARCHAR(50),
    prd_start_dt     DATE,
    prd_end_dt       DATE,
    dwh_create_date  DATETIME2 DEFAULT GETDATE()
);

-- 3. Insertamos datos transformados desde bronze.crm_prd_info
INSERT INTO silver.crm_prd_info (
   prd_id,
   cat_id,
   prd_key,
   prd_nm,
   prd_cost,
   prd_line,
   prd_start_dt,
   prd_end_dt 
)
SELECT
    prd_id,
    REPLACE(SUBSTRING (prd_key, 1, 5),'-','_')  AS cat_id,
    SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key,
    prd_nm,
    ISNULL(prd_cost,0) AS prd_cost,
        CASE UPPER(TRIM(prd_line)) 
            WHEN  'M' THEN 'Mountain'
            WHEN  'R' THEN 'Road'
            WHEN  'S' THEN 'Other Sales'
            WHEN  'T' THEN 'Touring'
            ELSE  'N/A'
        END AS prd_line,
   CAST(prd_start_dt AS DATE) AS prd_start_dt,
    CAST(LEAD(prd_start_dt) OVER (
        PARTITION BY prd_key 
        ORDER BY prd_start_dt
    )-1 AS DATE) AS prd_end_dt
FROM bronze.crm_prd_info;

-- 4. Verificamos la calidad de los datos cargados
SELECT * FROM silver.crm_prd_info;

-- 5. Validamos duplicados o nulos en prd_id
SELECT prd_id, COUNT(*)
FROM silver.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL;

-- 6. Validamos duplicados o nulos en prd_nm
SELECT prd_nm, COUNT(*)
FROM silver.crm_prd_info
GROUP BY prd_nm
HAVING COUNT(*) > 1 OR prd_nm IS NULL;

-- 7. Detectamos nombres con espacios sobrantes
SELECT prd_nm
FROM silver.crm_prd_info
WHERE prd_nm != TRIM(prd_nm);

-- 8. Detectamos costos negativos o nulos
SELECT prd_cost
FROM silver.crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL;

-- 9. Validamos claves de categoría no reconocidas
SELECT
    prd_id,
    prd_key,
    REPLACE(SUBSTRING (prd_key, 1, 5),'-','_') AS cat_id,
    prd_nm,
    prd_cost,
    prd_line,
    prd_start_dt,
    prd_end_dt
FROM bronze.crm_prd_info
WHERE REPLACE(SUBSTRING (prd_key, 1, 5),'-','_') NOT IN (
    SELECT DISTINCT id FROM bronze.erp_px_cat_g1v2
);

-- 10. Validamos claves de producto sin ventas registradas
SELECT
    prd_id,
    prd_key,
    REPLACE(SUBSTRING (prd_key, 1, 5),'-','_') AS cat_id,
    SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key,
    prd_nm,
    prd_cost,
    prd_line,
    prd_start_dt,
    prd_end_dt
FROM bronze.crm_prd_info
WHERE SUBSTRING(prd_key, 7, LEN(prd_key)) NOT IN (
    SELECT sls_prd_key FROM bronze.crm_sales_details
);

-- 11. Validamos productos con fechas invertidas
SELECT * 
FROM bronze.crm_prd_info 
WHERE prd_end_dt < prd_start_dt;

-- 12. Simulamos fecha de fin con LEAD para casos específicos
SELECT
    prd_id,
    prd_key,
    prd_nm,
    prd_start_dt,
    prd_end_dt,
    LEAD(prd_start_dt) OVER (
        PARTITION BY prd_key 
        ORDER BY prd_start_dt
    )-1 AS prd_end_test
FROM bronze.crm_prd_info
WHERE prd_key IN ('AC-HE-HL-U509-R', 'AC-HE-HL-U509');

-- 13. Exploramos transformaciones y reconstrucciones por lotes
SELECT DISTINCT prd_line FROM silver.crm_prd_info;

-- 14. Validamos productos con prd_end_dt simulada menor que prd_start_dt
SELECT * 
FROM silver.crm_prd_info 
WHERE prd_end_dt < prd_start_dt;

-- 15. Exploraciones complementarias (sin filtros)
SELECT
    prd_id,
    prd_key,
    REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_id,
    SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key,
    prd_nm,
    ISNULL(prd_cost, 0) AS prd_cost,
    CASE UPPER(TRIM(prd_line)) 
        WHEN 'M' THEN 'Mountain'
        WHEN 'R' THEN 'Road'
        WHEN 'S' THEN 'Other Sales'
        WHEN 'T' THEN 'Touring'
        ELSE 'N/A'
    END AS prd_line,
    CAST(prd_start_dt AS DATE) AS prd_start_dt,
    CAST(DATEADD(DAY, -1, LEAD(prd_start_dt) OVER (
        PARTITION BY prd_key 
        ORDER BY prd_start_dt
    )) AS DATE) AS prd_end_test,
    prd_end_dt
FROM bronze.crm_prd_info;
